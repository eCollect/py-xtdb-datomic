openapi: 3.0.1
info:
  title: XTDB
servers:
  - url: /
components:
  schemas:
    Timeout:
      description: timeout in milliseconds
      type: integer
    DefaultTz:
      type: string
      example: "America/Los_Angeles"
    SystemTime:
      type: string
      example: "2024-01-01T00:00Z"
      format: date-time
    TransactionKey:
      type: object
      properties:
        tx-id:
          type: integer
        system-time:
          example: "2024-01-01T00:00Z"
          type: string
    Status:
      type: object
      properties:
        latest-completed-tx:
          $ref: '#/components/schemas/TransactionKey'
        latest-submitted-tx:
          $ref: '#/components/schemas/TransactionKey'
    TransactionOp:
      type: object
    TransactionOps:
      type: object
      required:
        - tx-ops
      properties:
        tx-ops:
          type: array
          items:
            $ref: '#/components/schemas/TransactionOp'
        opts:
          title: transaction opts
          type: object
          properties:
            system-time:
              schema:
                $ref: '#/components/schemas/SystemTime'
            default-tz:
              schema:
                $ref: '#/components/schemas/DefaultTz'
            default-all-valid-time?:
              type: boolean
    Row:
      type: object
    Error:
      type: object
      properties:
        xtdb.error/error-type:
          type: string
          example: "illegal-argument"
        xtdb.error/error-key:
          type: string
          example: "xtql/malformed-table"
        message:
          type: string
          example: "Illegal argument: ':xtql/malformed-table'"
    Basis:
      type: object
      properties:
        description: wall clock time for functions that require it (i.e. `(current-time)`)
        current-time:
          type: string
          example: "2024-01-01T00:00Z"
          format: date-time
        tx:
          description: specifies the latest transaction thatâ€™ll be visible to the query
          schema:
            $ref: '#/components/schemas/TransactionKey'
        after-tx:
          description: requires that the node has indexed at least the specified transaction
          schema:
            $ref: '#/components/schemas/TransactionKey'
    Query:
      type: object
    QueryBody:
      title: xtdb.server/query-body
      required:
        - query
      type: object
      properties:
        query:
          schema:
            $ref: '#/components/schemas/Query'
        basis:
          schema:
            $ref: '#/components/schemas/Basis'
        basis-timeout:
          description:  Timeout to wait for the basis
          schema:
            $ref: '#'#/components/schemas/Timeout'
          nullable: true
        args:
          type: array
          nullable: true
          items:
            type: object
        default-all-valid-time?:
          type: boolean
        default-tz:
          schema:
            $ref: '#/components/schemas/DefaultTz'
paths:
  /status:
    get:
      summary: Status
      description: Get status information from the node
      responses:
        '200':
          description: Ok
          content:
            application/transit+json:
              schema:
                $ref: '#/components/schemas/Status'
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /tx:
    post:
      summary: Transaction
      description: |
        Submits a transaction to the cluster. 
        
        See [XTQL Transactions](https://docs.xtdb.com/reference/main/xtql/txs) for details about different XT transaction operations. 
        
        See [SQL Transactions](https://docs.xtdb.com/reference/main/sql/txs) for details about different SQL transaction operations.
      requestBody:
        content:
          application/transit+json:
            schema:
              $ref: '#/components/schemas/TransactionOps'
        required: true
      responses:
        200:
          description: Ok
          content:
            application/transit+json:
              schema:
                $ref: '#/components/schemas/TransactionKey'
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionKey'
        400:
          description: A validation error, parsing error or runtime error occurred.
          content:
            application/transit+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Server error. An unknown error occurred server side.
          content:
            application/transit+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /query:
    post:
      summary: Query
      description: |
        Submits a query to the cluster.
        
        See [XTQL queries](https://docs.xtdb.com/reference/main/xtql/queries) for details about how to construct queries.
        
        See [SQL queries](https://docs.xtdb.com/reference/main/sql/queries) for details about SQL queries.
      requestBody:
        content:
          application/transit+json:
            schema:
              $ref: '#/components/schemas/QueryBody'
        required: true
      responses:
        200:
          description: Ok
          content:
            application/transit+json:
              schema:
                $ref: '#/components/schemas/Row'
            application/jsonl:
              schema:
                $ref: '#/components/schemas/Row'
        400:
          description: A validation error, parsing error or runtime error occurred.
          content:
            application/transit+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Server error. An unknown error occurred server side.
          content:
            application/transit+json:
              schema:
                $ref: '#/components/schemas/Error'
            application/json:
              schema:
                $ref: '#/components/schemas/Error'